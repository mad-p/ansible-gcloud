---

language: generic
python: "2.7"

matrix:
  include:
    - name: "Ubuntu 14.04 LTS with Ansible 2.4"
      os: linux
      dist: trusty
      sudo: required
      env: ANSIBLE_VERSION='>=2.4.6.0,<2.5.0'
    - name: "Ubuntu 16.04 LTS with Ansible 2.5"
      os: linux
      dist: xenial
      sudo: required
      env: ANSIBLE_VERSION='<2.6.0'
    - name: "Ubuntu 16.04 LTS with Ansible 2.6"
      os: linux
      dist: xenial
      sudo: required
      env: ANSIBLE_VERSION='<2.7.0'
    - name: "Ubuntu 16.04 LTS with Ansible 2.7"
      os: linux
      dist: xenial
      sudo: required
      env: ANSIBLE_VERSION='<2.8.0'
    - name: "macOS 10.12 (Sierra) with Xcode 9.2"
      os: osx
      osx_image: xcode9.2
      env: BREW_UPGRADE=yes
    - name: "macOS 10.13 (High Sierra) with Xcode 10.1"
      os: osx
      osx_image: xcode10.1
    - name: "macOS 10.14 (Mojave) with Xcode 10.2 beta"
      os: osx
      osx_image: xcode10.2

# Install Ansible and Python development packages
addons:
  apt:
    packages:
    - python-pip
    - python-dev
  homebrew:
    packages:
    - ansible
    - pre-commit

cache:
  directories:
  - $HOME/.cache/pre-commit/

branches:
  only:
  - master
  - /^feature\/.*$/
  - /^bugfix\/.*$/
  - /^v\d+\.\d+(\.\d+)?(-\S*)?$/

before_cache:
- rm -f $HOME/.cache/pre-commit/pre-commit.log

before_install:
  # Update Homebrew before installation
  - if [[ "$BREW_UPGRADE" == "yes" ]]; then brew update; fi

install:
  # Install Ansible with Homebrew on OSX
  - if [[ "$BREW_UPGRADE" == "yes" ]]; then brew upgrade ansible; fi

  # upgrade pre-commit with Homebrew
  - if [[ "$BREW_UPGRADE" == "yes" ]]; then brew upgrade pre-commit; fi

  # Install Ansible with pip
  - if [[ "$TRAVIS_OS_NAME" != "osx" ]]; then pip install ansible${ANSIBLE_VERSION}; fi

  # Install pre-commit with pip
  - if [[ "$TRAVIS_OS_NAME" != "osx" ]]; then pip install pre-commit; fi

  # Check Ansible version
  - ansible --version

  # Create ansible.cfg with correct roles_path
  - printf '[defaults]\nroles_path=../\n' > ansible.cfg

before_script:
  # https://github.com/travis-ci/travis-ci/issues/6307
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then rvm get head || true; fi

script:

  # Run pre-commit hooks
  - pre-commit run -a || travis_terminate 1

  # Basic role syntax check
  - ansible-playbook tests/test.yml -i tests/inventory --syntax-check

  # Test role run
  - >
    ansible-playbook tests/test.yml -i tests/inventory --connection=local

  # Test idempotence
  - >
    ansible-playbook tests/test.yml -i tests/inventory --connection=local
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)
